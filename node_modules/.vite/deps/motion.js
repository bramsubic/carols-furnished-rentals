import {
  Animation,
  MotionValue,
  ScrollOffset,
  animate,
  animateStyle,
  createAnimate,
  createMotionState,
  createStyleString,
  createStyles,
  getAnimationData,
  getStyleName,
  glide,
  inView,
  isFunction,
  mountedStates,
  resize,
  scroll,
  spring,
  stagger,
  style,
  timeline,
  withControls
} from "./chunk-2AUCO7YE.js";
import "./chunk-Y2F7D3TJ.js";

// node_modules/motion/dist/animate.es.js
function animateProgress(target, options = {}) {
  return withControls([
    () => {
      const animation = new Animation(target, [0, 1], options);
      animation.finished.catch(() => {
      });
      return animation;
    }
  ], options, options.duration);
}
function animate2(target, keyframesOrOptions, options) {
  const factory = isFunction(target) ? animateProgress : animate;
  return factory(target, keyframesOrOptions, options);
}
export {
  MotionValue,
  ScrollOffset,
  animate2 as animate,
  animateStyle,
  createAnimate,
  createMotionState,
  createStyleString,
  createStyles,
  getAnimationData,
  getStyleName,
  glide,
  inView,
  mountedStates,
  resize,
  scroll,
  spring,
  stagger,
  style,
  timeline,
  withControls
};
//# sourceMappingURL=motion.js.map
